module Main where

import Compiler
import JavaCompiler
import SymbolTable
import IOUtils

import System.Environment

main :: IO ()
main = do
    args <- getArgs
    let (inputDir, javaOutputDir, classOutputDir, javaClasspath) = flags args
    --let inputDir = "cobalt_src/"
    --let javaOutputDir = "cobalt_generated_java/"
    --let classOutputDir = "cobalt_generated_classes/"
    --let javaClasspath = "cobalt_generated_java/"

    cleanDir (endsWith ".java") javaOutputDir

    putStrLn "Compiling - Cobalt -> Java"
    compile inputDir javaOutputDir
    putStrLn "Complete."

    putStrLn "Compiling - Java -> Byte code"
    compileJavaDir javaClasspath javaOutputDir classOutputDir
    putStrLn "Complete."

    putStrLn "Executing generated Byte code"
    putStrLn "Unimplemented."
